// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	// Or order by question order if needed, requires joining questions
	CalculateQuizAttemptScore(ctx context.Context, quizAttemptID uuid.UUID) (int64, error)
	CreateActivityLog(ctx context.Context, arg CreateActivityLogParams) (ActivityLog, error)
	CreateAnswer(ctx context.Context, arg CreateAnswerParams) (Answer, error)
	CreateMaterial(ctx context.Context, arg CreateMaterialParams) (Material, error)
	CreateQuestion(ctx context.Context, arg CreateQuestionParams) (Question, error)
	CreateQuiz(ctx context.Context, arg CreateQuizParams) (Quize, error)
	CreateQuizAttempt(ctx context.Context, arg CreateQuizAttemptParams) (QuizAttempt, error)
	CreateToken(ctx context.Context, arg CreateTokenParams) (Token, error)
	CreateTokenTransaction(ctx context.Context, arg CreateTokenTransactionParams) (Token, error)
	CreateTopic(ctx context.Context, arg CreateTopicParams) (Topic, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	// Use with caution, logs are often meant to be kept
	DeleteActivityLog(ctx context.Context, id uuid.UUID) error
	DeleteAnswer(ctx context.Context, id uuid.UUID) error
	DeleteAnswersByQuestionID(ctx context.Context, questionID uuid.UUID) error
	DeleteMaterial(ctx context.Context, id uuid.UUID) error
	DeleteQuestion(ctx context.Context, id uuid.UUID) error
	DeleteQuiz(ctx context.Context, id uuid.UUID) error
	DeleteToken(ctx context.Context, id uuid.UUID) error
	DeleteTopic(ctx context.Context, id uuid.UUID) error
	DeleteUser(ctx context.Context, id uuid.UUID) error
	GetActivityLogByID(ctx context.Context, id uuid.UUID) (ActivityLog, error)
	GetAnswerByID(ctx context.Context, id uuid.UUID) (Answer, error)
	GetAnswerCorrectness(ctx context.Context, id uuid.UUID) (bool, error)
	GetAttemptAnswer(ctx context.Context, arg GetAttemptAnswerParams) (AttemptAnswer, error)
	GetMaterialByID(ctx context.Context, id uuid.UUID) (Material, error)
	GetQuestionByID(ctx context.Context, id uuid.UUID) (Question, error)
	GetQuizAttempt(ctx context.Context, id uuid.UUID) (QuizAttempt, error)
	GetQuizAttemptWithDetails(ctx context.Context, id uuid.UUID) (GetQuizAttemptWithDetailsRow, error)
	GetQuizByID(ctx context.Context, id uuid.UUID) (Quize, error)
	// Less common to fetch by its own ID, but included for completeness
	GetQuizMaterialByID(ctx context.Context, id uuid.UUID) (QuizMaterial, error)
	GetQuizMaterialByQuizAndMaterialID(ctx context.Context, arg GetQuizMaterialByQuizAndMaterialIDParams) (QuizMaterial, error)
	// Less common to fetch by its own ID, but included for completeness
	GetQuizTopicByID(ctx context.Context, id uuid.UUID) (QuizTopic, error)
	GetQuizTopicByQuizAndTopicID(ctx context.Context, arg GetQuizTopicByQuizAndTopicIDParams) (QuizTopic, error)
	GetTokenByID(ctx context.Context, id uuid.UUID) (Token, error)
	GetTopicByID(ctx context.Context, id uuid.UUID) (Topic, error)
	GetTopicByTitleAndUser(ctx context.Context, arg GetTopicByTitleAndUserParams) (Topic, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByGoogleID(ctx context.Context, googleID pgtype.Text) (User, error)
	GetUserByID(ctx context.Context, id uuid.UUID) (User, error)
	LinkQuizMaterial(ctx context.Context, arg LinkQuizMaterialParams) (QuizMaterial, error)
	LinkQuizTopic(ctx context.Context, arg LinkQuizTopicParams) (QuizTopic, error)
	ListActivityLogs(ctx context.Context) ([]ActivityLog, error)
	ListActivityLogsByAction(ctx context.Context, action ActivityAction) ([]ActivityLog, error)
	ListActivityLogsByTarget(ctx context.Context, arg ListActivityLogsByTargetParams) ([]ActivityLog, error)
	ListActivityLogsByUserID(ctx context.Context, userID pgtype.UUID) ([]ActivityLog, error)
	ListAnswers(ctx context.Context) ([]Answer, error)
	ListAnswersByQuestionID(ctx context.Context, questionID uuid.UUID) ([]Answer, error)
	ListAttemptAnswersByAttempt(ctx context.Context, quizAttemptID uuid.UUID) ([]AttemptAnswer, error)
	ListMaterialIDsByQuizID(ctx context.Context, quizID uuid.UUID) ([]uuid.UUID, error)
	ListMaterials(ctx context.Context) ([]Material, error)
	ListMaterialsByUserID(ctx context.Context, userID uuid.UUID) ([]Material, error)
	ListPublicQuizes(ctx context.Context) ([]Quize, error)
	ListQuestions(ctx context.Context) ([]Question, error)
	ListQuestionsByQuizAndTopicID(ctx context.Context, arg ListQuestionsByQuizAndTopicIDParams) ([]Question, error)
	// Or by position/order if added
	ListQuestionsByQuizID(ctx context.Context, quizID uuid.UUID) ([]ListQuestionsByQuizIDRow, error)
	ListQuestionsByTopicID(ctx context.Context, topicID uuid.UUID) ([]Question, error)
	ListQuizAttemptsByUser(ctx context.Context, userID uuid.UUID) ([]QuizAttempt, error)
	ListQuizAttemptsWithDetailsByUser(ctx context.Context, userID uuid.UUID) ([]ListQuizAttemptsWithDetailsByUserRow, error)
	ListQuizIDsByMaterialID(ctx context.Context, materialID uuid.UUID) ([]uuid.UUID, error)
	ListQuizIDsByTopicID(ctx context.Context, topicID uuid.UUID) ([]uuid.UUID, error)
	ListQuizMaterialsByQuizID(ctx context.Context, quizID uuid.UUID) ([]QuizMaterial, error)
	ListQuizTopicsByQuizID(ctx context.Context, quizID uuid.UUID) ([]QuizTopic, error)
	ListQuizes(ctx context.Context) ([]Quize, error)
	ListQuizesByCreatorID(ctx context.Context, creatorID pgtype.UUID) ([]Quize, error)
	ListQuizesByVisibility(ctx context.Context, visibility QuizVisibility) ([]Quize, error)
	ListQuizzesByCreator(ctx context.Context, creatorID pgtype.UUID) ([]ListQuizzesByCreatorRow, error)
	ListTokens(ctx context.Context) ([]Token, error)
	ListTokensByUserID(ctx context.Context, userID uuid.UUID) ([]Token, error)
	ListTopicIDsByQuizID(ctx context.Context, quizID uuid.UUID) ([]uuid.UUID, error)
	ListTopics(ctx context.Context) ([]Topic, error)
	ListTopicsByCreatorID(ctx context.Context, creatorID pgtype.UUID) ([]Topic, error)
	ListUserAttemptsWithQuizName(ctx context.Context, userID uuid.UUID) ([]ListUserAttemptsWithQuizNameRow, error)
	ListUsers(ctx context.Context) ([]User, error)
	UnlinkAllMaterialsFromQuiz(ctx context.Context, quizID uuid.UUID) error
	UnlinkAllTopicsFromQuiz(ctx context.Context, quizID uuid.UUID) error
	UnlinkMaterialFromAllQuizes(ctx context.Context, materialID uuid.UUID) error
	UnlinkQuizMaterial(ctx context.Context, arg UnlinkQuizMaterialParams) error
	UnlinkQuizTopic(ctx context.Context, arg UnlinkQuizTopicParams) error
	UnlinkTopicFromAllQuizes(ctx context.Context, topicID uuid.UUID) error
	// Or some other defined order
	UpdateAnswer(ctx context.Context, arg UpdateAnswerParams) (Answer, error)
	UpdateMaterial(ctx context.Context, arg UpdateMaterialParams) (Material, error)
	UpdateQuestion(ctx context.Context, arg UpdateQuestionParams) (Question, error)
	UpdateQuiz(ctx context.Context, arg UpdateQuizParams) (Quize, error)
	UpdateQuizAttemptScoreAndEndTime(ctx context.Context, arg UpdateQuizAttemptScoreAndEndTimeParams) (QuizAttempt, error)
	UpdateToken(ctx context.Context, arg UpdateTokenParams) (Token, error)
	UpdateTopic(ctx context.Context, arg UpdateTopicParams) (Topic, error)
	// Or any other order
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateUserTokenBalance(ctx context.Context, arg UpdateUserTokenBalanceParams) (User, error)
	UpsertAttemptAnswer(ctx context.Context, arg UpsertAttemptAnswerParams) (AttemptAnswer, error)
}

var _ Querier = (*Queries)(nil)
